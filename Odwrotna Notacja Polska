#include<iostream>
#include<vector>
#include<cstdlib>
#include<sstream>

using namespace std;

class stack {
private:
    vector<int> arith_exp;
    int top_val;
public:
    void push (int var) {
        arith_exp.push_back(var);
    }
    int pop () {
        top_val = arith_exp.back();
        arith_exp.pop_back();
        return top_val;
    }
    int arith_size () {
        return arith_exp.size();
    }
    
};

int main () {
    
    string line;
    stack exp;
    int val, first_term, second_term;
    char flag;
    flag = 's';
    
    while (getline(cin, line)) {
        stringstream str_st(line);
        while(getline(str_st, line, ' ')) {
            if (line == "true") {
                exp.push(-1);
            }
            else if (line == "false") {
                exp.push(-2);
            }
            else if (line != "+" && line != "*" && line != "==" && line != "and" && line != "or") {
                val = atoi(line.c_str());
                exp.push(val);
            }
            else {
                if (exp.arith_size() > 1 ) {
                    first_term = exp.pop();
                    second_term = exp.pop();
                    if (line == "+") {
                        if (first_term < 0 || second_term < 0) {
                            cout << "TYPE ERROR" << endl;
                            flag = 'f';
                            break;
                        }
                        else {
                            val = first_term + second_term;
                            exp.push(val);
                        }
                    }
                    else if (line == "*") {
                        if (first_term < 0 || second_term < 0) {
                            cout << "TYPE ERROR" << endl;
                            flag = 'f';
                            break;
                        }
                        else {
                            val = first_term * second_term;
                            exp.push(val);
                        }
                    }
                    else if (line == "==") {
                        if (first_term < 0 || second_term < 0) {
                            cout << "TYPE ERROR" << endl;
                            flag = 'f';
                            break;
                        }
                        else if (first_term == second_term) {
                            exp.push(-1);
                        }
                        else {
                            exp.push(-2);
                        }
                    }
                    else if (line == "and") {
                        if (first_term < 0 && second_term < 0) {
                            if (first_term == -1 && second_term == -1)
                                exp.push(-1);
                            else
                                exp.push(-2);
                        }
                        else {
                            cout << "TYPE ERROR" << endl;
                            flag = 'f';
                            break;
                        }
                    }
                    else {
                        if (first_term < 0 && second_term < 0) {
                            if (first_term == -2 && second_term == -2)
                                exp.push(-2);
                            else
                                exp.push(-1);
                        }
                        else {
                            cout << "TYPE ERROR" << endl;
                            flag = 'f';
                            break;
                        }
                    }                                       }
                else {
                    cout << "SYNTAX ERROR" << endl;
                    flag = 'f';
                    break;
                }
            }
        }
        break;
    }
    
    if (exp.arith_size() == 1 && flag == 's') {
        val = exp.pop();
        if (val == -1) {
            cout << "true"<< endl;
        }
        else if (val == -2) {
            cout << "false"<< endl;
        }
        else {
            cout << val<<endl;
        }
        
    }
    else if (flag == 's') {
        cout<<"SYNTAX ERROR"<<endl;
    }
    
    return 0;
}
